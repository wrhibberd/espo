---
import type { ImageMetadata } from "astro";
interface Props {
	heading: string;
	body: string;
	services?: Array<string>;
	position?: "top" | "center" | "bottom";
	alt?: string;
	image?: ImageMetadata;
	loading?: "lazy" | "eager";
}

import { Picture } from "astro:assets";

const {
	heading,
	body,
	services,
	position = "top",
	alt,
	image,
	loading = "lazy",
} = Astro.props as Props;
---

<section
	class:list={[
		"relative justify-end h-full min-h-screen flex flex-col px-20 md:px-40 pt-190 md:pt-280 pb-40 md:pb-80",
		{ "background-pattern": !image },
		{ "md:justify-start": position === "top" },
		{ "md:justify-center": position === "center" },
		{ "md:justify-end": position === "bottom" },
	]}
>
	{
		image && alt && (
			<Picture
				src={image}
				alt={alt}
				widths={[400, 800, 1200, 1600]}
				formats={["webp", "avif"]}
				fallbackFormat="jpg"
				pictureAttributes={{
					class: "overflow-hidden w-full h-full",
				}}
				class="w-full h-full object-cover absolute inset-0 lazyload blur-up"
			/>
		)
	}
	<div class="md:ml-90 relative max-w-[75%] md:max-w-[26.25rem]">
		<h2 class="mb-30 md:mb-60 r-lg [text-wrap:balance]">{heading}</h2>
		<div
			class:list={[
				"r-sm [text-wrap:pretty] rich-text",
				services ? "sm:columns-2 sm:gap-20" : "md:max-w-[13.125rem]",
			]}
		>
			<div set:html={body} />
			{
				services && (
					<ul>
						{services.map((service) => (
							<li>{service}</li>
						))}
					</ul>
				)
			}
		</div>
	</div>
</section>
